{"version":3,"sources":["styles/Global.styles.js","styles/App.styles.js","App.functions.js","contexts/SessionContexts.js","components/BtnPad/BtnPad.styles.js","components/Button/Button.styles.js","components/Button/Button.jsx","components/BtnPad/BtnPad.jsx","components/SessionDisplay/SessionDisplay.styles.js","components/SessionDisplay/SessionDisplay.jsx","App.jsx","index.js"],"names":["GlobalStyles","createGlobalStyle","AppSty","styled","div","AppFunctions","timerOn","setTimerOn","setHasStarted","handleValChange","val","valChanger","type","handlePlayPause","SessionContexts","createContext","BtnPadSty","ButtonSty","button","Button","id","content","clickFn","onClick","BtnPad","useContext","SessionDisplaySty","time","SessionDisplay","timerLabel","timerDisplay","setReset","className","App","useState","breakLength","setBreakLength","sessionLength","setSessionLength","hasStarted","onSession","setOnSession","reset","setTime","minutes","Math","floor","seconds","beep","useRef","useEffect","myTimer","setTimeout","clearTimeout","current","play","pause","currentTime","Provider","value","ref","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9b48159.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    *, \n    *:before, \n    *:after {\n        box-sizing: inherit;\n    }\n\n    body,\n    #root {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nexport default GlobalStyles;\n","import styled from 'styled-components';\n\nconst AppSty = styled.div`\n\tbackground-color: #1e555c;\n\tcolor: #ffffff;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-size: 1.7em;\n\theight: 100%;\n\tpadding: 1px;\n\ttext-align: center;\n\ttext-transform: capitalize;\n\twidth: 100%;\n\n\t& .session-container {\n\t\tmargin: auto;\n\t}\n`;\n\nexport default AppSty;\n","const AppFunctions = ({ timerOn, setTimerOn, setHasStarted }) => {\n\tconst handleValChange = (val, valChanger, type) => {\n\t\tif (!timerOn) {\n\t\t\tsetHasStarted(false);\n\t\t\tif (type === '+') {\n\t\t\t\tvalChanger(val + 1);\n\t\t\t} else {\n\t\t\t\tvalChanger(val - 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handlePlayPause = () => {\n\t\tsetTimerOn(!timerOn);\n\t\tsetHasStarted(true);\n\t};\n\n\treturn { handleValChange, handlePlayPause };\n};\n\nexport default AppFunctions;\n","import { createContext } from 'react';\n\nconst SessionContexts = createContext({});\n\nexport default SessionContexts;\n","import styled from 'styled-components';\n\nconst BtnPadSty = styled.div`\n\tdisplay: inline-block;\n\tmargin: 0 1rem;\n`;\n\nexport default BtnPadSty;\n","import styled from 'styled-components';\n\nconst ButtonSty = styled.button`\n\tall: unset;\n\tcursor: pointer;\n`;\n\nexport default ButtonSty;\n","import ButtonSty from './Button.styles';\n\nconst Button = ({ id, content, clickFn }) => (\n\t<ButtonSty id={id} onClick={clickFn}>\n\t\t{content}\n\t</ButtonSty>\n);\n\nexport default Button;\n","import { useContext } from 'react';\nimport { TiArrowUpThick, TiArrowDownThick } from 'react-icons/ti';\nimport SessionContexts from '../../contexts/SessionContexts';\nimport BtnPadSty from './BtnPad.styles';\nimport Button from '../Button/Button';\n\nconst BtnPad = ({ id, val, valChanger }) => {\n\tconst { handleValChange } = useContext(SessionContexts);\n\n\treturn (\n\t\t<BtnPadSty>\n\t\t\t<div id={`${id}-label`}>{id} length</div>\n\t\t\t<Button\n\t\t\t\tid={`${id}-decrement`}\n\t\t\t\tcontent={<TiArrowDownThick />}\n\t\t\t\tclickFn={() => val > 1 && handleValChange(val, valChanger, '-')}\n\t\t\t/>\n\t\t\t<span id={`${id}-length`}>{val}</span>\n\t\t\t<Button\n\t\t\t\tid={`${id}-increment`}\n\t\t\t\tcontent={<TiArrowUpThick />}\n\t\t\t\tclickFn={() =>\n\t\t\t\t\tval < 60 && handleValChange(val, valChanger, '+')\n\t\t\t\t}\n\t\t\t/>\n\t\t</BtnPadSty>\n\t);\n};\nexport default BtnPad;\n","import styled from 'styled-components';\n\nconst SessionDisplaySty = styled.div`\n\t& .session-panel {\n\t\tborder: 5px solid #13353a;\n\t\tborder-radius: 30px;\n\t\tmargin: auto;\n\t\tpadding: 1rem;\n\t\twidth: fit-content;\n\n\t\t& #time-left {\n\t\t\tcolor: ${({ time }) => (time >= 60 ? '#ffffff' : '#9e0f10')};\n\t\t\tfont-size: 2em;\n\t\t}\n\t}\n`;\n\nexport default SessionDisplaySty;\n","import { TiMediaPlay, TiMediaPause, TiArrowRepeat } from 'react-icons/ti';\nimport SessionDisplaySty from './SessionDisplay.styles';\nimport Button from '../Button/Button';\n\nconst SessionDisplay = ({\n\ttimerLabel,\n\ttime,\n\ttimerDisplay,\n\ttimerOn,\n\thandlePlayPause,\n\tsetReset,\n}) => (\n\t<SessionDisplaySty time={time}>\n\t\t<div className=\"session-panel\">\n\t\t\t<div id=\"timer-label\">{timerLabel}</div>\n\t\t\t<span id=\"time-left\">{timerDisplay}</span>\n\t\t</div>\n\t\t<Button\n\t\t\tid=\"start_stop\"\n\t\t\tcontent={timerOn ? <TiMediaPause /> : <TiMediaPlay />}\n\t\t\tclickFn={handlePlayPause}\n\t\t/>\n\t\t<Button\n\t\t\tid=\"reset\"\n\t\t\tcontent={<TiArrowRepeat />}\n\t\t\tclickFn={() => setReset(true)}\n\t\t/>\n\t</SessionDisplaySty>\n);\n\nexport default SessionDisplay;\n","import { useEffect, useState, useRef } from 'react';\nimport GlobalStyles from './styles/Global.styles';\nimport AppSty from './styles/App.styles';\nimport AppFunctions from './App.functions';\nimport SessionContexts from './contexts/SessionContexts';\nimport BtnPad from './components/BtnPad/BtnPad';\nimport SessionDisplay from './components/SessionDisplay/SessionDisplay';\n\nconst App = () => {\n\tconst [breakLength, setBreakLength] = useState(5);\n\tconst [sessionLength, setSessionLength] = useState(25);\n\tconst [timerOn, setTimerOn] = useState(false);\n\tconst [hasStarted, setHasStarted] = useState(false);\n\tconst [onSession, setOnSession] = useState(true);\n\tconst [reset, setReset] = useState(false);\n\n\tconst [time, setTime] = useState(sessionLength * 60);\n\tconst minutes = Math.floor(time / 60);\n\tconst seconds = `${time % 60}`;\n\n\tconst beep = useRef();\n\n\tuseEffect(() => {\n\t\tif (!timerOn && !hasStarted) {\n\t\t\tsetTime((onSession ? sessionLength : breakLength) * 60);\n\t\t}\n\t\tconst myTimer = timerOn && setTimeout(() => setTime(time - 1), 1000);\n\n\t\tif (!timerOn) {\n\t\t\tclearTimeout(myTimer);\n\t\t}\n\t\tif (!time) {\n\t\t\tbeep.current.play();\n\t\t\tsetOnSession(!onSession);\n\t\t\tsetTime((onSession ? breakLength : sessionLength) * 60);\n\t\t}\n\t\treturn () => clearTimeout(myTimer);\n\t}, [breakLength, sessionLength, timerOn, time]);\n\n\t// if you are wondering why I have so much code: the testing CDN is kinda weird\n\t// so I have to do some hacky stuff to pass a test, because it fails some times\n\t// even tho it does what it says\n\t// but, you know, machines are dumb\n\tif (reset) {\n\t\tbeep.current.pause();\n\t\tbeep.current.currentTime = 0;\n\t\tsetTimerOn(false);\n\t\tsetHasStarted(false);\n\t\tsetBreakLength(5);\n\t\tsetSessionLength(25);\n\t\tsetOnSession(true);\n\t\tsetTime(sessionLength * 60);\n\t\tsetReset(false);\n\t}\n\tconst timerDisplay = `${minutes < 10 ? `0${minutes}` : minutes}:${\n\t\tseconds < 10 ? `0${seconds}` : seconds\n\t}`;\n\n\tconst { handleValChange, handlePlayPause } = AppFunctions({\n\t\ttimerOn,\n\t\tsetTimerOn,\n\t\tsetHasStarted,\n\t});\n\n\t// OMG I DID IT I HAVE THE 3 FRONT END CERTIFICATES\n\n\treturn (\n\t\t<AppSty>\n\t\t\t<GlobalStyles />\n\t\t\t<SessionContexts.Provider value={{ handleValChange }}>\n\t\t\t\t<div className=\"session-container\">\n\t\t\t\t\t<h1>25 + 5 Clock</h1>\n\t\t\t\t\t<BtnPad\n\t\t\t\t\t\tid=\"break\"\n\t\t\t\t\t\tval={breakLength}\n\t\t\t\t\t\tvalChanger={setBreakLength}\n\t\t\t\t\t/>\n\t\t\t\t\t<BtnPad\n\t\t\t\t\t\tid=\"session\"\n\t\t\t\t\t\tval={sessionLength}\n\t\t\t\t\t\tvalChanger={setSessionLength}\n\t\t\t\t\t/>\n\t\t\t\t\t<SessionDisplay\n\t\t\t\t\t\ttimerLabel={onSession ? 'session' : 'break'}\n\t\t\t\t\t\ttime={time}\n\t\t\t\t\t\ttimerDisplay={timerDisplay}\n\t\t\t\t\t\ttimerOn={timerOn}\n\t\t\t\t\t\thandlePlayPause={handlePlayPause}\n\t\t\t\t\t\tsetReset={setReset}\n\t\t\t\t\t/>\n\t\t\t\t\t<audio\n\t\t\t\t\t\tref={beep}\n\t\t\t\t\t\tid=\"beep\"\n\t\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</SessionContexts.Provider>\n\t\t</AppSty>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}